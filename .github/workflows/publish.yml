name: Publish to NuGet

on:
  release:
    types: [published]
  workflow_dispatch: 

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Extract version from tag
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          # Use a default version for manual runs
          VERSION="0.0.0-dev"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Update project version
      run: |
        # Use a different delimiter for sed to avoid conflicts with forward slashes
        sed -i "s|<Version>.*</Version>|<Version>${{ steps.get_version.outputs.VERSION }}</Version>|" xUnit.OTel.csproj

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal

    - name: Pack NuGet package
      run: dotnet pack --no-build --configuration Release --output ./nupkg

    - name: Publish to NuGet
      run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: published-packages
        path: ./nupkg/*.nupkg
